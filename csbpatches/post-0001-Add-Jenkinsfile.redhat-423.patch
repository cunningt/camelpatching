From 87a3b74ffd7af6bf2cd5dfc17153467ea50b0a71 Mon Sep 17 00:00:00 2001
From: Tom Cunningham <tcunning@redhat.com>
Date: Mon, 23 Sep 2024 10:48:57 -0400
Subject: [PATCH] Add Jenkinsfile.redhat (#423)

---
 Jenkinsfile.redhat | 77 ++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 77 insertions(+)
 create mode 100644 Jenkinsfile.redhat

diff --git a/Jenkinsfile.redhat b/Jenkinsfile.redhat
new file mode 100644
index 00000000000..a5ad9d8b483
--- /dev/null
+++ b/Jenkinsfile.redhat
@@ -0,0 +1,77 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+def MAVEN_PARAMS = '-B -e -ntp -s $MAVEN_SETTINGS -Parchetypes-skip-tests -Djava.net.preferIPv4Stack=true -Dsurefire.rerunFailingTestsCount=5 -Dfailsafe.rerunFailingTestsCount=5'
+
+pipeline {
+
+    agent {
+        label "rhel||pipeline||pipeline-large"
+    }
+
+    tools {
+        jdk 'java-17'
+    }
+
+    environment {
+        MAVEN_OPTS = '-Xmx3g'
+    }
+
+    options {
+        buildDiscarder(
+            logRotator(artifactNumToKeepStr: '5', numToKeepStr: '10')
+        )
+    }
+
+    parameters {
+        booleanParam(name: 'CLEAN', defaultValue: true, description: 'Perform the build in clean workspace')
+    }
+
+    stages {
+
+        stage('Clean workspace') {
+             when {
+                 expression { params.CLEAN }
+             }
+             steps {
+                 sh 'git clean -fdx'
+           }
+        }
+
+        stage('Build') {
+            steps {
+                configFileProvider([configFile(fileId: 'fuse-maven-settings', variable: 'MAVEN_SETTINGS')]) {
+                    script {
+                        spring_boot_itests_result = sh script: "./mvnw $MAVEN_PARAMS -Dmaven.test.failure.ignore=true clean install", returnStatus: true
+                    }
+                }
+            }
+            post {
+                always {
+                    junit allowEmptyResults: true, testResults: '**/target/surefire-reports/*.xml'
+                }
+            }
+        }
+    }
+
+    post {
+        always {
+            script {
+                currentBuild.result = spring_boot_itests_result == 0 ? 'SUCCESS' : 'FAILURE'
+            }
+        }
+    }
+}
-- 
2.46.0

